[gd_scene load_steps=8 format=2]

[ext_resource path="res://transition_shader.gd" type="Script" id=1]
[ext_resource path="res://sfx/screen_wipe_in.wav" type="AudioStream" id=2]
[ext_resource path="res://sfx/screen_wipe_out.wav" type="AudioStream" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

// An input into the shader from our game code.
// Ranges from 0 to 1 over the course of the transition.
// We use this to actually animate the shader.
uniform float progress : hint_range(0, 1);

// Size of each diamond, in pixels.
uniform float diamondPixelSize = 60f;

void fragment() {
    float xFraction = fract(FRAGCOORD.x / diamondPixelSize);
    float yFraction = fract(FRAGCOORD.y / diamondPixelSize);
    
    float xDistance = abs(xFraction - 0.5);
    float yDistance = abs(yFraction - 0.5);
    
    if (xDistance + yDistance + UV.x + UV.y > progress * 4f) {
        discard;
    }
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/progress = 0.0
shader_param/diamondPixelSize = 32.0

[sub_resource type="Animation" id=3]
resource_name = "fade_in"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRect:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Animation" id=4]
resource_name = "fade_out"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRect:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[node name="TransitionLayer" type="CanvasLayer"]
script = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_right = 160.0
margin_bottom = 144.0
color = Color( 1, 0.92549, 0.152941, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "fade_in"
anims/fade_in = SubResource( 3 )
anims/fade_out = SubResource( 4 )

[node name="FadeOutSFX" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )

[node name="FadeInSFX" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
